name: Daily Release

on:
  schedule:
    - cron: "0 4 * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  create-daily-release:
    name: Create Daily Release
    runs-on: ubuntu-latest
    steps:
      - name: Derive release metadata
        id: metadata
        shell: bash
        run: |
          set -euo pipefail
          tag="daily-$(date -u '+%Y%m%d')"
          title="Daily release $(date -u '+%Y-%m-%d')"
          body="Automated daily release generated at 04:00 UTC."
          printf 'tag=%s\n' "$tag" >> "$GITHUB_OUTPUT"
          printf 'title=%s\n' "$title" >> "$GITHUB_OUTPUT"
          printf 'body=%s\n' "$body" >> "$GITHUB_OUTPUT"

      - name: Create release
        uses: actions/github-script@v7
        env:
          TAG_NAME: ${{ steps.metadata.outputs.tag }}
          RELEASE_TITLE: ${{ steps.metadata.outputs.title }}
          RELEASE_BODY: ${{ steps.metadata.outputs.body }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const tagName = process.env.TAG_NAME;
            const releaseName = process.env.RELEASE_TITLE;
            const releaseBody = process.env.RELEASE_BODY;
            const defaultBranch =
              context.payload?.repository?.default_branch || 'main';

            try {
              await github.rest.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag: tagName,
              });
              core.info(`Release ${tagName} already exists; skipping creation.`);
              return;
            } catch (error) {
              if (error.status !== 404) {
                throw error;
              }
            }

            await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: tagName,
              target_commitish: defaultBranch,
              name: releaseName,
              body: releaseBody,
              draft: false,
              prerelease: false,
              generate_release_notes: true,
            });
            core.info(`Release ${tagName} created targeting ${defaultBranch}.`);
