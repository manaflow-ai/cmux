#!/usr/bin/env bash
set -euo pipefail

mkdir -p /var/log/cmux

color=""
case "${VSCODE_THEME:-}" in
  dark)
    color="Default Dark Modern"
    ;;
  light)
    color="Default Light Modern"
    ;;
  system)
    color="Default Dark Modern"
    ;;
esac

# Default settings for cmux environment
DEFAULT_SETTINGS=$(jq -n \
  --arg theme "$color" \
  '{
    "workbench.startupEditor": "none",
    "terminal.integrated.shellIntegration.enabled": false,
    "terminal.integrated.shell.linux": "/usr/bin/zsh",
    "terminal.integrated.shellArgs.linux": ["-l"],
    "terminal.integrated.defaultProfile.linux": "zsh",
    "terminal.integrated.profiles.linux": {
      "zsh": {
        "path": "/usr/bin/zsh",
        "args": ["-l"]
      }
    },
    "python.languageServer": "Pylance",
    "python.defaultInterpreterPath": "/usr/bin/python3",
    "git.openDiffOnClick": true,
    "scm.defaultViewMode": "tree",
    "git.showPushSuccessNotification": true,
    "git.autorefresh": true,
    "git.branchCompareWith": "main"
  } + (if $theme != "" then {"workbench.colorTheme": $theme} else {} end)')

home="${HOME:-/root}"
user_base="${home}/.openvscode-server"
user_dir="${user_base}/data/User"
default_profile_dir="${user_base}/data/User/profiles/default-profile"
machine_dir="${user_base}/data/Machine"

mkdir -p "${user_dir}" "${default_profile_dir}" "${machine_dir}"

# Check if user settings were mounted (from local VSCode/Cursor)
if [ -f "${user_dir}/settings.json" ] && [ -r "${user_dir}/settings.json" ]; then
  echo "User VSCode settings detected, merging with cmux defaults"

  # Read existing user settings
  USER_SETTINGS=$(cat "${user_dir}/settings.json")

  # Merge: user settings take precedence, but add our defaults for missing keys
  MERGED_SETTINGS=$(jq -s '.[0] * .[1]' <(echo "$DEFAULT_SETTINGS") <(echo "$USER_SETTINGS"))

  # Write merged settings to profile and machine directories
  printf '%s' "$MERGED_SETTINGS" > "${default_profile_dir}/settings.json"
  printf '%s' "$MERGED_SETTINGS" > "${machine_dir}/settings.json"

  # Copy keybindings if present
  if [ -f "${user_dir}/keybindings.json" ]; then
    cp "${user_dir}/keybindings.json" "${default_profile_dir}/keybindings.json" || true
    cp "${user_dir}/keybindings.json" "${machine_dir}/keybindings.json" || true
  fi

  echo "Successfully merged user VSCode settings"
else
  echo "No user settings found, using cmux defaults"
  # No user settings mounted, use defaults
  printf '%s' "$DEFAULT_SETTINGS" > "${user_dir}/settings.json"
  printf '%s' "$DEFAULT_SETTINGS" > "${default_profile_dir}/settings.json"
  printf '%s' "$DEFAULT_SETTINGS" > "${machine_dir}/settings.json"
fi
